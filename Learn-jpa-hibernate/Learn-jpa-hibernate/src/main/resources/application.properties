#Enabling H2 Console
spring.h2.console.enabled=true

#Setting datasource url otherwise it will be generated dynamically
spring.datasource.url=jdbc:h2:mem:testdb

#Setting driver (no need)
spring.datasource.driverClassName=org.h2.Driver

#default username
spring.datasource.username=sa

#setting blank password for easy login
spring.datasource.password=

#this is done so that we can use data.sql to populate table. In latest spring, data.sql is executed before hibernate is initialized
spring.jpa.defer-datasource-initialization=true

#logging.level.root=debug

#show all queries jpa is executing in background
spring.jpa.show-sql=true

#Turn statistics on
spring.jpa.properties.hibernate.generated_statistics=true

#turn logging level for hibernate stat package
logging.level.org.hibernate.stat=debug

#turn logging level for hibernate type package (shows all parameters values)
logging.level.org.hibernate.type=trace

#format the logged queries
spring.jpa.properties.hibernate.format_sql=true

#performance
spring.jpa.properties.hibernate.jdbc.batch_size=10

#Second Level Cache

#Step1 - Enable Second Level Cache
spring.jpa.properties.hibernate.cache.use_second_level_cache=true

#Step2 - Specify the caching framework (here Ehcache)
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.internal.EhcacheRegionFactory

#Step3 - Enable only cache what I tell to (can be changed to All cache, etc.)
spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE

#Step4 - What data to cache
#Added via @Cacheable over Entities to be cached

#enable logging for cache
logging.level.net.sf.ehcache=debug
logging.level.org.hibernate.cache=debug